{"version":3,"sources":["components/RegisteredCourses.js","components/Semester.js","components/SemesterCourses.js","components/Student.js","components/DataSheet.js","App.js","reportWebVitals.js","index.js"],"names":["RegisteredCourses","props","useState","grades","setGrades","useEffect","axios","get","then","data","handleChange","e","target","name","value","patch","id","gradeid","res","student","regno","regs","setRegistrations","map","reg","course","code","title","crhr","_id","onChange","hidden","length","g","grade","gpa","toFixed","JSON","stringify","Semester","semesters","setSemesters","semester","setSemester","console","log","semno","Number","getSemester","sem","SemesterCourses","courses","setCourses","courseids","checked","courseid","filter","includes","getCourseIds","type","c","style","width","onClick","addRegistrations","Student","onKeyPress","which","getStudent","Object","keys","studentname","fathername","DataSheet","setStudent","setCourseids","setRegs","setGpa","undefined","className","s","args","cids","index","indexOf","push","splice","post","r","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbc596ac.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst RegisteredCourses = (props) => {\r\n\tconst [grades, setGrades] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(`/api/registrations/grades`).then((grades) => {\r\n\t\t\tsetGrades(grades.data.grades);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tlet handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\taxios.patch('/api/registrations/update', { id: name, gradeid: value }).then((res) => {\r\n\t\t\taxios.get(`/api/registrations/${props.student.regno}`).then((regs) => {\r\n\t\t\t\tprops.setRegistrations(regs.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Code</th>\r\n\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t<th>CrHr</th>\r\n\t\t\t\t\t\t<th>Grade</th>\r\n\t\t\t\t\t\t<th>GPA</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.regs.map((reg) => (\r\n\t\t\t\t\t\t<tr key={reg._id}>\r\n\t\t\t\t\t\t\t<td>{reg.course.code}</td>\r\n\t\t\t\t\t\t\t<td>{reg.course.title}</td>\r\n\t\t\t\t\t\t\t<td>{reg.course.crhr}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<select name={reg._id} value={reg.gradeid || ''} onChange={handleChange}>\r\n\t\t\t\t\t\t\t\t\t<option hidden value=''></option>\r\n\t\t\t\t\t\t\t\t\t{grades.length !== 0 &&\r\n\t\t\t\t\t\t\t\t\t\tgrades.map((g) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={g.gradeid} value={g.gradeid}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{g.grade}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{reg.gradeid !== null ? reg.grade.gpa : ''}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<tfoot>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t<td>{props.gpa.toFixed(2)}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tfoot>\r\n\t\t\t</table>\r\n\t\t\t<div>\r\n\t\t\t\t<pre>{JSON.stringify({ grades }, null, 2)}</pre>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegisteredCourses;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Semester = (props) => {\r\n\tconst [semesters, setSemesters] = useState([]);\r\n\tconst [semester, setSemester] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(`/api/courses/all`).then((semesters) => {\r\n\t\t\tsetSemesters(semesters.data);\r\n\t\t\tconsole.log(semesters.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSemester(props.semno);\r\n\t}, [props.semno]);\r\n\r\n\tlet handleChange = (e) => {\r\n\t\tsetSemester(Number(e.target.value));\r\n\t\tprops.getSemester(Number(e.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Semester : </th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select name='semester' value={semester} onChange={handleChange}>\r\n\t\t\t\t\t\t\t<option hidden></option>\r\n\t\t\t\t\t\t\t{semesters.length !== 0 &&\r\n\t\t\t\t\t\t\t\tsemesters.map((sem) => (\r\n\t\t\t\t\t\t\t\t\t<option key={sem} value={sem}>\r\n\t\t\t\t\t\t\t\t\t\t{sem}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nexport default Semester;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst SemesterCourses = (props) => {\r\n\tconst [courses, setCourses] = useState([]);\r\n\tconst { semester, courseids } = props;\r\n\tuseEffect(() => {\r\n\t\taxios.get(`/api/courses/${semester}`).then((courses) => {\r\n\t\t\tsetCourses(courses.data);\r\n\t\t\t//console.log(courses.data);\r\n\t\t});\r\n\t}, [semester]);\r\n\r\n\tlet handleChange = (e) => {\r\n\t\tconst { name, value, checked } = e.target;\r\n\t\tlet courseids = checked ? courses.map((course) => course.courseid).filter((e) => !props.regs.includes(e)) : [];\r\n\r\n\t\tprops.getCourseIds({ name, value, courseids });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{courses.length !== 0 && (\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<input type='checkbox' name='master' onChange={handleChange} />\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>Code</th>\r\n\t\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t\t<th>CrHr</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{courses.map((c) => (\r\n\t\t\t\t\t\t\t<tr key={c.courseid}>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{!props.regs.includes(c.courseid) ? (\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tname='courseid'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={c.courseid}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={props.courseids.includes(c.courseid)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{c.code}</td>\r\n\t\t\t\t\t\t\t\t<td style={{ width: '400px' }}>{c.title}</td>\r\n\t\t\t\t\t\t\t\t<td>{c.crhr}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t)}\r\n\t\t\t{courseids.length !== 0 && <button onClick={props.addRegistrations}>Register</button>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SemesterCourses;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst Student = (props) => {\r\n\tlet handleKeyPress = (e) => {\r\n\t\tif (e.which === 13) {\r\n\t\t\t//console.log('Enter Pressed');\r\n\t\t\t// this.setState({ regno: e.target.value });\r\n\t\t\taxios.get(`/api/students/${e.target.value}`).then((student) => {\r\n\t\t\t\tprops.getStudent(student.data);\r\n\t\t\t\tconsole.log(student.data);\r\n\t\t\t});\r\n\t\t\taxios.get(`/api/registrations/${e.target.value}`).then((regs) => {\r\n\t\t\t\tprops.setRegistrations(regs.data);\r\n\t\t\t\t//console.log(regs.data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Regno : </th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input type='text' name='regno' onKeyPress={handleKeyPress} />\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<br />\r\n\t\t\t{Object.keys(props.student).length !== 0 && (\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Name : </th>\r\n\t\t\t\t\t\t\t<td>{props.student.studentname}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Father : </th>\r\n\t\t\t\t\t\t\t<td>{props.student.fathername}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Student;\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport RegisteredCourses from './RegisteredCourses';\r\nimport Semester from './Semester';\r\nimport SemesterCourses from './SemesterCourses';\r\nimport Student from './Student';\r\n\r\nconst DataSheet = () => {\r\n\tconst [student, setStudent] = useState({});\r\n\tconst [semester, setSemester] = useState(0);\r\n\tconst [courseids, setCourseids] = useState([]);\r\n\tconst [regs, setRegs] = useState([]);\r\n\tconst [gpa, setGpa] = useState(0);\r\n\r\n\tlet getStudent = (s) => {\r\n\t\tsetStudent(s);\r\n\t\tsetSemester(0);\r\n\t\tsetCourseids([]);\r\n\t\tsetGpa(0);\r\n\t};\r\n\r\n\tlet getSemester = (semno) => {\r\n\t\tsetSemester(semno);\r\n\t};\r\n\r\n\tlet getCourseIds = (args) => {\r\n\t\tif (args.name === 'master') {\r\n\t\t\tsetCourseids(args.courseids);\r\n\t\t} else {\r\n\t\t\tlet cids = [...courseids];\r\n\t\t\tlet index = cids.indexOf(Number(args.value));\r\n\t\t\tindex === -1 ? cids.push(Number(args.value)) : cids.splice(index, 1);\r\n\t\t\tsetCourseids(cids);\r\n\t\t}\r\n\t};\r\n\r\n\tlet setRegistrations = (data) => {\r\n\t\tconst { regs, gpa } = data;\r\n\t\tsetRegs(regs);\r\n\t\tsetGpa(gpa !== undefined ? gpa.gpa : 0);\r\n\t};\r\n\r\n\tlet addRegistrations = () => {\r\n\t\taxios\r\n\t\t\t.post(`/api/registrations/add`, {\r\n\t\t\t\tregno: student.regno,\r\n\t\t\t\tcourseids: JSON.stringify(courseids),\r\n\t\t\t})\r\n\t\t\t.then((regs) => {\r\n\t\t\t\tsetCourseids([]);\r\n\t\t\t\taxios.get(`/api/registrations/${student.regno}`).then((regs) => {\r\n\t\t\t\t\tsetRegistrations(regs.data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='col'>\r\n\t\t\t\t<Student getStudent={getStudent} student={student} setRegistrations={setRegistrations} />\r\n\t\t\t\t<br />\r\n\t\t\t\t{Object.keys(student).length !== 0 && <Semester getSemester={getSemester} semno={semester} />}\r\n\t\t\t\t<br />\r\n\t\t\t\t{semester !== 0 && (\r\n\t\t\t\t\t<SemesterCourses\r\n\t\t\t\t\t\tsemester={semester}\r\n\t\t\t\t\t\tgetCourseIds={getCourseIds}\r\n\t\t\t\t\t\tcourseids={courseids}\r\n\t\t\t\t\t\taddRegistrations={addRegistrations}\r\n\t\t\t\t\t\tregs={regs.map((r) => r.courseid)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className='col'>\r\n\t\t\t\t{regs.length !== 0 && (\r\n\t\t\t\t\t<RegisteredCourses regs={regs} setRegistrations={setRegistrations} student={student} gpa={gpa} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className='col'>\r\n\t\t\t\t<pre>{JSON.stringify({ student, semester, courseids, regs }, null, 2)}</pre>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DataSheet;\r\n","import './App.css';\nimport DataSheet from './components/DataSheet';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<DataSheet />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}